# -*- coding: utf-8 -*-
"""Dunkin_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jg72FoCN7YEVzwnt4iILazCQ-v2eg6Y7

# **Dunkin Donuts Coffee Assignment 1**

Dunkin Donuts sells several different *types* and *sizes* of coffee products. Each product will be specified by both a type and a size.  

We will represent the coffee menu with a Python dictionary.  This dictionary holds the prices of the different types and sizes of coffee products.  (Note that this dictionary is a shortened version of the full Dunkin menu.)

This assignment requires you to initialize variables and fill in a few functions. The functions can be used to calculate and print price information from the dictionary.

Below, you'll find some starter code and associated prompts.

Each function has an associated "test" for you written below it. When you run your function, these tests will automatically run your function and display your function's output.

We have also provided you with the expected answer, so you can check for yourself if you have written functions that produce the expected answers! All you have to do is run the code block, and compare the printed values your functions produced with the expected values. The values we have provided as expected values are rounded, but we do not expect your functions to round numbers.

The values will be printed as numbers, not as dollars - this is to be expected!

## Turning in the Assignment

When you think that you have your code working, download it as a .py file and submit it to GradeScope. You will need to make sure to remove the "Copy of" prefix from the title before doing so. If you do not get full credit, you can revise your code and resubmit it to GradeScope as many times as you like before the due date.

If you have questions about getting your Python code to work, email the TA or the Instructor.  And if you're contacting someone for help with code, it may be helpful to send them a shareable link to your Colab file to go over. (Sending Python code as an attachment does not seem to work very well.) You can also set up a time to go over your assignment in person or over Zoom.

## GradeScope Tips

In the past, students have sometimes had problems submitting their code to GradeScope.  So that this does not end up being a problem at the last minute, my advice is to try downloading the Python file and submitting to GradeScope first thing (i.e., even before you start writing code).  You will not get full credit yet.  But GradeScope should be able to grade the file.

The main issue that students tend to have with GradeScope has been the file name.  copy_of_dunkin_assignment1.py won’t work.  Also, Don’s_dunkin_assignment1.py won’t work.  You should make sure that the file that you upload is called dunkin_1.py

If you still have a problem, send me or the TA a link to your Colab notebook and we’ll see if we can figure out what is going on.  By the way, be sure to change the sharing permissions so that anyone with the link can view the file.
"""

dunkin_menu = {'Small Coffee': 1.69, 'Medium Coffee': 2.09, 'Large Coffee': 2.39, \
               'Small Latte': 2.79, 'Medium Latte': 3.09, 'Large Latte': 3.79, \
               'Small Cappuccino': 2.69, 'Medium Cappuccino': 2.99, 'Large Cappuccino': 3.69}

"""The above dunkin_menu variable is a **global variable** meaning that it will be accessible throughout the code blocks below. You will use the dunkin_menu to retrieve and calculate price information in the following exercises.

You will see the expression below uses a **local variable** called price. This variable is assigned the value of the price of a small coffee in the dunkin_menu. The print function is used to print the cost of a small coffee in the dunkin_menu. It will not in any way modify any existing values or variables.

**Exercise 1:**

You will fill in the body of a generalized function 'get_price' to retrieve the price of any specified product in the dunkin_menu.

*Input*
    
- menu:  A local variable that specifies the data container where products are listed. The function retrieves the price of a specified product from this data container.

- product: The name of a product in the dunkin_menu. For example, 'Small Coffee'.
                
*Output*
    
- result: A local variable initialized to the cost of a product in the dunkin_menu.
     
"""

sc_price = dunkin_menu['Small Coffee']
print("The price of a small coffee is", sc_price)

def get_price(menu, product):

    result = 0

    # -------------------------------------------------------------------------
    # YOUR CODE GOES HERE
    #
    result = menu[product]

    #
    # END OF YOUR CODE
    # -------------------------------------------------------------------------

    return result

print("What is the price of a medium latte?")
ml_price = get_price(dunkin_menu, 'Medium Latte')
print("Your answer:", ml_price)
print("Expected result: 3.09")
print("")

"""In this code block, we begin by defining a local variable called sc_price, to retrieve the price of a small coffee from the dunkin_menu. Then, we use the print function to print the cost of three, small coffees.

**Exercise 2:**

For this exercise, you will fill in the body of a generalized function 'triple_price' that triples the price of any specified product in the dunkin_menu.

*Input*
    
- price: A local variable that represents the price of a specific product in the dunkin_menu.  

*Output*

- result: An expression to calculate the cost of buying three of the specified products.


"""

sc_price = get_price(dunkin_menu, 'Small Coffee')
print("The price of three small coffees is", sc_price * 3)

def triple_price(price):

    result = 0

    # -------------------------------------------------------------------------
    # YOUR CODE GOES HERE
    #
    result = price * 3

    #
    # END OF YOUR CODE
    # -------------------------------------------------------------------------

    return result

print("What is the price of three medium lattes?")
ml_price = get_price(dunkin_menu, 'Medium Latte')
ml_result = triple_price(ml_price)
print("Your answer:", ml_result)
print("Expected result: 9.27")
print("")

"""**Exercise 3:**

For this exercise, you will fill in the body of the generalized function 'calculate_price' to calculate the cost of a product in the dunkin_menu when it the product's price multipled by any specified value.

*Input*

- price: A local variable that represents the cost of a specific product in the dunkin_menu.

- multiplier: The factor used to multiply the price.

*Output*

- result: An expression to calculate the cost of buying multiple of the specified product.

"""

def calculate_price(price, multiplier):

    result = 0

    # -------------------------------------------------------------------------
    # YOUR CODE GOES HERE
    #
    result = price * multiplier

    #
    # END OF YOUR CODE
    # -------------------------------------------------------------------------

    return result

print("What is the price of five medium lattes?")
ml_price = get_price(dunkin_menu, 'Medium Latte')
ml_result = calculate_price(ml_price, 5)
print("Your answer:", ml_result)
print("Expected result: 15.45")
print("")

"""**Exercise 4:**

For this exercise, you will fill in the body of the 'print_menu_items' function to print the prices of every product in the dunkin_menu.  This function iterates through each product in the menu and prints its price.

*Hints*

- You will want to use a 'for' statement that loops through a set of data and executes a code on each iteration variable in the data container.

- You will initialize an **iteration variable**, called "item", to set the print function to print the price associated with each menu item in the dunkin_menu.

*Input*

- menu:  A local variable that specifies the data container where products are listed. The function retrieves the prices of all products from this data container.
         
*Output*

Unlike the preceding functions, this function does not return a value.  It just prints the value associated with each item in the dunkin_menu.
"""

def print_menu_items(menu):

    # -------------------------------------------------------------------------
    # YOUR CODE GOES HERE
    #
    toPrint = ""
    for item in menu:
      print(menu[item])

    #
    # END OF YOUR CODE
    # -------------------------------------------------------------------------

    return

print("What are the range of costs of items in the dunkin_menu?")
print("Your answer: ")
print_menu_items(dunkin_menu)
print("Expected result:\n1.69\n2.09\n2.39\n2.79\n3.09\n3.79\n2.69\n2.99\n3.69")
